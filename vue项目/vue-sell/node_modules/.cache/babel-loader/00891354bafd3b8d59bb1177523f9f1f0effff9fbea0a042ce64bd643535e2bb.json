{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanDialog from './Dialog';\nimport { isServer } from '../utils';\nvar instance;\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\nfunction initInstance() {\n  if (instance) {\n    instance.$destroy();\n  }\n  instance = new (Vue.extend(VanDialog))({\n    el: document.createElement('div'),\n    // avoid missing animation when first rendered\n    propsData: {\n      lazyRender: false\n    }\n  });\n  instance.$on('input', function (value) {\n    instance.value = value;\n  });\n}\nfunction Dialog(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return Promise.resolve();\n  }\n  return new Promise(function (resolve, reject) {\n    if (!instance || !isInDocument(instance.$el)) {\n      initInstance();\n    }\n    _extends(instance, Dialog.currentOptions, options, {\n      resolve: resolve,\n      reject: reject\n    });\n  });\n}\nDialog.defaultOptions = {\n  value: true,\n  title: '',\n  width: '',\n  theme: null,\n  message: '',\n  overlay: true,\n  className: '',\n  allowHtml: true,\n  lockScroll: true,\n  transition: 'van-dialog-bounce',\n  beforeClose: null,\n  overlayClass: '',\n  overlayStyle: null,\n  messageAlign: '',\n  getContainer: 'body',\n  cancelButtonText: '',\n  cancelButtonColor: null,\n  confirmButtonText: '',\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false,\n  callback: function callback(action) {\n    instance[action === 'confirm' ? 'resolve' : 'reject'](action);\n  }\n};\nDialog.alert = Dialog;\nDialog.confirm = function (options) {\n  return Dialog(_extends({\n    showCancelButton: true\n  }, options));\n};\nDialog.close = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\nDialog.setDefaultOptions = function (options) {\n  _extends(Dialog.currentOptions, options);\n};\nDialog.resetDefaultOptions = function () {\n  Dialog.currentOptions = _extends({}, Dialog.defaultOptions);\n};\nDialog.resetDefaultOptions();\nDialog.install = function () {\n  Vue.use(VanDialog);\n};\nDialog.Component = VanDialog;\nVue.prototype.$dialog = Dialog;\nexport default Dialog;","map":{"version":3,"names":["_extends","Vue","VanDialog","isServer","instance","isInDocument","element","document","body","contains","initInstance","$destroy","extend","el","createElement","propsData","lazyRender","$on","value","Dialog","options","Promise","resolve","reject","$el","currentOptions","defaultOptions","title","width","theme","message","overlay","className","allowHtml","lockScroll","transition","beforeClose","overlayClass","overlayStyle","messageAlign","getContainer","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","showConfirmButton","showCancelButton","closeOnPopstate","closeOnClickOverlay","callback","action","alert","confirm","close","setDefaultOptions","resetDefaultOptions","install","use","Component","prototype","$dialog"],"sources":["C:/Users/方鹏/Desktop/codingSpace/vue项目/vue-sell/node_modules/vant/es/dialog/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanDialog from './Dialog';\nimport { isServer } from '../utils';\nvar instance;\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction initInstance() {\n  if (instance) {\n    instance.$destroy();\n  }\n\n  instance = new (Vue.extend(VanDialog))({\n    el: document.createElement('div'),\n    // avoid missing animation when first rendered\n    propsData: {\n      lazyRender: false\n    }\n  });\n  instance.$on('input', function (value) {\n    instance.value = value;\n  });\n}\n\nfunction Dialog(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (!instance || !isInDocument(instance.$el)) {\n      initInstance();\n    }\n\n    _extends(instance, Dialog.currentOptions, options, {\n      resolve: resolve,\n      reject: reject\n    });\n  });\n}\n\nDialog.defaultOptions = {\n  value: true,\n  title: '',\n  width: '',\n  theme: null,\n  message: '',\n  overlay: true,\n  className: '',\n  allowHtml: true,\n  lockScroll: true,\n  transition: 'van-dialog-bounce',\n  beforeClose: null,\n  overlayClass: '',\n  overlayStyle: null,\n  messageAlign: '',\n  getContainer: 'body',\n  cancelButtonText: '',\n  cancelButtonColor: null,\n  confirmButtonText: '',\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false,\n  callback: function callback(action) {\n    instance[action === 'confirm' ? 'resolve' : 'reject'](action);\n  }\n};\nDialog.alert = Dialog;\n\nDialog.confirm = function (options) {\n  return Dialog(_extends({\n    showCancelButton: true\n  }, options));\n};\n\nDialog.close = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\n\nDialog.setDefaultOptions = function (options) {\n  _extends(Dialog.currentOptions, options);\n};\n\nDialog.resetDefaultOptions = function () {\n  Dialog.currentOptions = _extends({}, Dialog.defaultOptions);\n};\n\nDialog.resetDefaultOptions();\n\nDialog.install = function () {\n  Vue.use(VanDialog);\n};\n\nDialog.Component = VanDialog;\nVue.prototype.$dialog = Dialog;\nexport default Dialog;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}