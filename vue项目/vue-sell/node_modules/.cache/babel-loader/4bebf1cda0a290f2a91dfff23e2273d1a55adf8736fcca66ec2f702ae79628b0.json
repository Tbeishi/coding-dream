{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.timers.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VueToast from './Toast';\nimport { isObject, isServer } from '../utils';\nimport { removeNode } from '../utils/dom/node';\nvar defaultOptions = {\n  icon: '',\n  type: 'text',\n  // @deprecated\n  mask: false,\n  value: true,\n  message: '',\n  className: '',\n  overlay: false,\n  onClose: null,\n  onOpened: null,\n  duration: 2000,\n  iconPrefix: undefined,\n  position: 'middle',\n  transition: 'van-fade',\n  forbidClick: false,\n  loadingType: undefined,\n  getContainer: 'body',\n  overlayStyle: null,\n  closeOnClick: false,\n  closeOnClickOverlay: false\n}; // default options of specific type\n\nvar defaultOptionsMap = {};\nvar queue = [];\nvar multiple = false;\nvar currentOptions = _extends({}, defaultOptions);\nfunction parseOptions(message) {\n  if (isObject(message)) {\n    return message;\n  }\n  return {\n    message: message\n  };\n}\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\nfunction createInstance() {\n  /* istanbul ignore if */\n  if (isServer) {\n    return {};\n  }\n  queue = queue.filter(function (item) {\n    return !item.$el.parentNode || isInDocument(item.$el);\n  });\n  if (!queue.length || multiple) {\n    var toast = new (Vue.extend(VueToast))({\n      el: document.createElement('div')\n    });\n    toast.$on('input', function (value) {\n      toast.value = value;\n    });\n    queue.push(toast);\n  }\n  return queue[queue.length - 1];\n} // transform toast options to popup props\n\nfunction transformOptions(options) {\n  return _extends({}, options, {\n    overlay: options.mask || options.overlay,\n    mask: undefined,\n    duration: undefined\n  });\n}\nfunction Toast(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var toast = createInstance(); // should add z-index if previous toast has not disappeared\n\n  if (toast.value) {\n    toast.updateZIndex();\n  }\n  options = parseOptions(options);\n  options = _extends({}, currentOptions, defaultOptionsMap[options.type || currentOptions.type], options);\n  if (process.env.NODE_ENV === 'development' && options.mask) {\n    console.warn('[Vant] Toast: \"mask\" option is deprecated, use \"overlay\" option instead.');\n  }\n  options.clear = function () {\n    toast.value = false;\n    if (options.onClose) {\n      options.onClose();\n      options.onClose = null;\n    }\n    if (multiple && !isServer) {\n      toast.$on('closed', function () {\n        clearTimeout(toast.timer);\n        queue = queue.filter(function (item) {\n          return item !== toast;\n        });\n        removeNode(toast.$el);\n        toast.$destroy();\n      });\n    }\n  };\n  _extends(toast, transformOptions(options));\n  clearTimeout(toast.timer);\n  if (options.duration > 0) {\n    toast.timer = setTimeout(function () {\n      toast.clear();\n    }, options.duration);\n  }\n  return toast;\n}\nvar createMethod = function createMethod(type) {\n  return function (options) {\n    return Toast(_extends({\n      type: type\n    }, parseOptions(options)));\n  };\n};\n['loading', 'success', 'fail'].forEach(function (method) {\n  Toast[method] = createMethod(method);\n});\nToast.clear = function (all) {\n  if (queue.length) {\n    if (all) {\n      queue.forEach(function (toast) {\n        toast.clear();\n      });\n      queue = [];\n    } else if (!multiple) {\n      queue[0].clear();\n    } else {\n      queue.shift().clear();\n    }\n  }\n};\nToast.setDefaultOptions = function (type, options) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = options;\n  } else {\n    _extends(currentOptions, type);\n  }\n};\nToast.resetDefaultOptions = function (type) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = null;\n  } else {\n    currentOptions = _extends({}, defaultOptions);\n    defaultOptionsMap = {};\n  }\n};\nToast.allowMultiple = function (value) {\n  if (value === void 0) {\n    value = true;\n  }\n  multiple = value;\n};\nToast.install = function () {\n  Vue.use(VueToast);\n};\nVue.prototype.$toast = Toast;\nexport default Toast;","map":{"version":3,"names":["_extends","Vue","VueToast","isObject","isServer","removeNode","defaultOptions","icon","type","mask","value","message","className","overlay","onClose","onOpened","duration","iconPrefix","undefined","position","transition","forbidClick","loadingType","getContainer","overlayStyle","closeOnClick","closeOnClickOverlay","defaultOptionsMap","queue","multiple","currentOptions","parseOptions","isInDocument","element","document","body","contains","createInstance","filter","item","$el","parentNode","length","toast","extend","el","createElement","$on","push","transformOptions","options","Toast","updateZIndex","process","env","NODE_ENV","console","warn","clear","clearTimeout","timer","$destroy","setTimeout","createMethod","forEach","method","all","shift","setDefaultOptions","resetDefaultOptions","allowMultiple","install","use","prototype","$toast"],"sources":["C:/Users/方鹏/Desktop/codingSpace/vue项目/vue-sell/node_modules/vant/es/toast/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VueToast from './Toast';\nimport { isObject, isServer } from '../utils';\nimport { removeNode } from '../utils/dom/node';\nvar defaultOptions = {\n  icon: '',\n  type: 'text',\n  // @deprecated\n  mask: false,\n  value: true,\n  message: '',\n  className: '',\n  overlay: false,\n  onClose: null,\n  onOpened: null,\n  duration: 2000,\n  iconPrefix: undefined,\n  position: 'middle',\n  transition: 'van-fade',\n  forbidClick: false,\n  loadingType: undefined,\n  getContainer: 'body',\n  overlayStyle: null,\n  closeOnClick: false,\n  closeOnClickOverlay: false\n}; // default options of specific type\n\nvar defaultOptionsMap = {};\nvar queue = [];\nvar multiple = false;\n\nvar currentOptions = _extends({}, defaultOptions);\n\nfunction parseOptions(message) {\n  if (isObject(message)) {\n    return message;\n  }\n\n  return {\n    message: message\n  };\n}\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction createInstance() {\n  /* istanbul ignore if */\n  if (isServer) {\n    return {};\n  }\n\n  queue = queue.filter(function (item) {\n    return !item.$el.parentNode || isInDocument(item.$el);\n  });\n\n  if (!queue.length || multiple) {\n    var toast = new (Vue.extend(VueToast))({\n      el: document.createElement('div')\n    });\n    toast.$on('input', function (value) {\n      toast.value = value;\n    });\n    queue.push(toast);\n  }\n\n  return queue[queue.length - 1];\n} // transform toast options to popup props\n\n\nfunction transformOptions(options) {\n  return _extends({}, options, {\n    overlay: options.mask || options.overlay,\n    mask: undefined,\n    duration: undefined\n  });\n}\n\nfunction Toast(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var toast = createInstance(); // should add z-index if previous toast has not disappeared\n\n  if (toast.value) {\n    toast.updateZIndex();\n  }\n\n  options = parseOptions(options);\n  options = _extends({}, currentOptions, defaultOptionsMap[options.type || currentOptions.type], options);\n\n  if (process.env.NODE_ENV === 'development' && options.mask) {\n    console.warn('[Vant] Toast: \"mask\" option is deprecated, use \"overlay\" option instead.');\n  }\n\n  options.clear = function () {\n    toast.value = false;\n\n    if (options.onClose) {\n      options.onClose();\n      options.onClose = null;\n    }\n\n    if (multiple && !isServer) {\n      toast.$on('closed', function () {\n        clearTimeout(toast.timer);\n        queue = queue.filter(function (item) {\n          return item !== toast;\n        });\n        removeNode(toast.$el);\n        toast.$destroy();\n      });\n    }\n  };\n\n  _extends(toast, transformOptions(options));\n\n  clearTimeout(toast.timer);\n\n  if (options.duration > 0) {\n    toast.timer = setTimeout(function () {\n      toast.clear();\n    }, options.duration);\n  }\n\n  return toast;\n}\n\nvar createMethod = function createMethod(type) {\n  return function (options) {\n    return Toast(_extends({\n      type: type\n    }, parseOptions(options)));\n  };\n};\n\n['loading', 'success', 'fail'].forEach(function (method) {\n  Toast[method] = createMethod(method);\n});\n\nToast.clear = function (all) {\n  if (queue.length) {\n    if (all) {\n      queue.forEach(function (toast) {\n        toast.clear();\n      });\n      queue = [];\n    } else if (!multiple) {\n      queue[0].clear();\n    } else {\n      queue.shift().clear();\n    }\n  }\n};\n\nToast.setDefaultOptions = function (type, options) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = options;\n  } else {\n    _extends(currentOptions, type);\n  }\n};\n\nToast.resetDefaultOptions = function (type) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = null;\n  } else {\n    currentOptions = _extends({}, defaultOptions);\n    defaultOptionsMap = {};\n  }\n};\n\nToast.allowMultiple = function (value) {\n  if (value === void 0) {\n    value = true;\n  }\n\n  multiple = value;\n};\n\nToast.install = function () {\n  Vue.use(VueToast);\n};\n\nVue.prototype.$toast = Toast;\nexport default Toast;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}