{"ast":null,"code":"import _typeof from \"C:/Users/\\u65B9\\u9E4F/Desktop/codingSpace/vue\\u9879\\u76EE/vue-sell/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport Vue from 'vue';\nexport { createNamespace } from './create';\nexport { addUnit } from './format/unit';\nexport var inBrowser = typeof window !== 'undefined';\nexport var isServer = Vue.prototype.$isServer; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nexport function noop() {}\nexport function isDef(val) {\n  return val !== undefined && val !== null;\n}\nexport function isFunction(val) {\n  return typeof val === 'function';\n}\nexport function isObject(val) {\n  return val !== null && _typeof(val) === 'object';\n}\nexport function isPromise(val) {\n  return isObject(val) && isFunction(val.then) && isFunction(val[\"catch\"]);\n}\nexport function get(object, path) {\n  var keys = path.split('.');\n  var result = object;\n  keys.forEach(function (key) {\n    var _result$key;\n    result = isObject(result) ? (_result$key = result[key]) != null ? _result$key : '' : '';\n  });\n  return result;\n}\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @function isEmpty\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\n\nexport function isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (_typeof(value) !== 'object') {\n    return true;\n  }\n  return Object.keys(value).length === 0;\n}","map":{"version":3,"names":["Vue","createNamespace","addUnit","inBrowser","window","isServer","prototype","$isServer","noop","isDef","val","undefined","isFunction","isObject","_typeof","isPromise","then","get","object","path","keys","split","result","forEach","key","_result$key","isEmpty","value","Object","length"],"sources":["C:/Users/方鹏/Desktop/codingSpace/vue项目/vue-sell/node_modules/vant/es/utils/index.js"],"sourcesContent":["import Vue from 'vue';\nexport { createNamespace } from './create';\nexport { addUnit } from './format/unit';\nexport var inBrowser = typeof window !== 'undefined';\nexport var isServer = Vue.prototype.$isServer; // eslint-disable-next-line @typescript-eslint/no-empty-function\n\nexport function noop() {}\nexport function isDef(val) {\n  return val !== undefined && val !== null;\n}\nexport function isFunction(val) {\n  return typeof val === 'function';\n}\nexport function isObject(val) {\n  return val !== null && typeof val === 'object';\n}\nexport function isPromise(val) {\n  return isObject(val) && isFunction(val.then) && isFunction(val.catch);\n}\nexport function get(object, path) {\n  var keys = path.split('.');\n  var result = object;\n  keys.forEach(function (key) {\n    var _result$key;\n\n    result = isObject(result) ? (_result$key = result[key]) != null ? _result$key : '' : '';\n  });\n  return result;\n}\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @function isEmpty\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\n\nexport function isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n\n  if (typeof value !== 'object') {\n    return true;\n  }\n\n  return Object.keys(value).length === 0;\n}"],"mappings":";;;;;AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,SAASC,eAAe,QAAQ,UAAU;AAC1C,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAO,IAAIC,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW;AACpD,OAAO,IAAIC,QAAQ,GAAGL,GAAG,CAACM,SAAS,CAACC,SAAS,CAAC,CAAC;;AAE/C,OAAO,SAASC,IAAIA,CAAA,EAAG,CAAC;AACxB,OAAO,SAASC,KAAKA,CAACC,GAAG,EAAE;EACzB,OAAOA,GAAG,KAAKC,SAAS,IAAID,GAAG,KAAK,IAAI;AAC1C;AACA,OAAO,SAASE,UAAUA,CAACF,GAAG,EAAE;EAC9B,OAAO,OAAOA,GAAG,KAAK,UAAU;AAClC;AACA,OAAO,SAASG,QAAQA,CAACH,GAAG,EAAE;EAC5B,OAAOA,GAAG,KAAK,IAAI,IAAII,OAAA,CAAOJ,GAAG,MAAK,QAAQ;AAChD;AACA,OAAO,SAASK,SAASA,CAACL,GAAG,EAAE;EAC7B,OAAOG,QAAQ,CAACH,GAAG,CAAC,IAAIE,UAAU,CAACF,GAAG,CAACM,IAAI,CAAC,IAAIJ,UAAU,CAACF,GAAG,SAAM,CAAC;AACvE;AACA,OAAO,SAASO,GAAGA,CAACC,MAAM,EAAEC,IAAI,EAAE;EAChC,IAAIC,IAAI,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAC1B,IAAIC,MAAM,GAAGJ,MAAM;EACnBE,IAAI,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC1B,IAAIC,WAAW;IAEfH,MAAM,GAAGT,QAAQ,CAACS,MAAM,CAAC,GAAG,CAACG,WAAW,GAAGH,MAAM,CAACE,GAAG,CAAC,KAAK,IAAI,GAAGC,WAAW,GAAG,EAAE,GAAG,EAAE;EACzF,CAAC,CAAC;EACF,OAAOH,MAAM;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,SAASI,OAAOA,CAACC,KAAK,EAAE;EAC7B,IAAIA,KAAK,IAAI,IAAI,EAAE;IACjB,OAAO,IAAI;EACb;EAEA,IAAIb,OAAA,CAAOa,KAAK,MAAK,QAAQ,EAAE;IAC7B,OAAO,IAAI;EACb;EAEA,OAAOC,MAAM,CAACR,IAAI,CAACO,KAAK,CAAC,CAACE,MAAM,KAAK,CAAC;AACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}