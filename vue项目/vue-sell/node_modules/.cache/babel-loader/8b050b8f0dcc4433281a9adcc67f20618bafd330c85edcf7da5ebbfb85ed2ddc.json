{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Overlay from '../../overlay';\nimport { context } from './context';\nimport { mount } from '../../utils/functional';\nimport { removeNode } from '../../utils/dom/node';\nvar defaultConfig = {\n  className: '',\n  customStyle: {}\n};\nfunction mountOverlay(vm) {\n  return mount(Overlay, {\n    on: {\n      // close popup when overlay clicked & closeOnClickOverlay is true\n      click: function click() {\n        vm.$emit('click-overlay');\n        if (vm.closeOnClickOverlay) {\n          if (vm.onClickOverlay) {\n            vm.onClickOverlay();\n          } else {\n            vm.close();\n          }\n        }\n      }\n    }\n  });\n}\nexport function updateOverlay(vm) {\n  var item = context.find(vm);\n  if (item) {\n    var el = vm.$el;\n    var config = item.config,\n      overlay = item.overlay;\n    if (el && el.parentNode) {\n      el.parentNode.insertBefore(overlay.$el, el);\n    }\n    _extends(overlay, defaultConfig, config, {\n      show: true\n    });\n  }\n}\nexport function openOverlay(vm, config) {\n  var item = context.find(vm);\n  if (item) {\n    item.config = config;\n  } else {\n    var overlay = mountOverlay(vm);\n    context.stack.push({\n      vm: vm,\n      config: config,\n      overlay: overlay\n    });\n  }\n  updateOverlay(vm);\n}\nexport function closeOverlay(vm) {\n  var item = context.find(vm);\n  if (item) {\n    item.overlay.show = false;\n  }\n}\nexport function removeOverlay(vm) {\n  var item = context.find(vm);\n  if (item) {\n    removeNode(item.overlay.$el);\n    context.remove(vm);\n  }\n}","map":{"version":3,"names":["_extends","Overlay","context","mount","removeNode","defaultConfig","className","customStyle","mountOverlay","vm","on","click","$emit","closeOnClickOverlay","onClickOverlay","close","updateOverlay","item","find","el","$el","config","overlay","parentNode","insertBefore","show","openOverlay","stack","push","closeOverlay","removeOverlay","remove"],"sources":["C:/Users/方鹏/Desktop/codingSpace/vue项目/vue-sell/node_modules/vant/es/mixins/popup/overlay.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Overlay from '../../overlay';\nimport { context } from './context';\nimport { mount } from '../../utils/functional';\nimport { removeNode } from '../../utils/dom/node';\nvar defaultConfig = {\n  className: '',\n  customStyle: {}\n};\n\nfunction mountOverlay(vm) {\n  return mount(Overlay, {\n    on: {\n      // close popup when overlay clicked & closeOnClickOverlay is true\n      click: function click() {\n        vm.$emit('click-overlay');\n\n        if (vm.closeOnClickOverlay) {\n          if (vm.onClickOverlay) {\n            vm.onClickOverlay();\n          } else {\n            vm.close();\n          }\n        }\n      }\n    }\n  });\n}\n\nexport function updateOverlay(vm) {\n  var item = context.find(vm);\n\n  if (item) {\n    var el = vm.$el;\n    var config = item.config,\n        overlay = item.overlay;\n\n    if (el && el.parentNode) {\n      el.parentNode.insertBefore(overlay.$el, el);\n    }\n\n    _extends(overlay, defaultConfig, config, {\n      show: true\n    });\n  }\n}\nexport function openOverlay(vm, config) {\n  var item = context.find(vm);\n\n  if (item) {\n    item.config = config;\n  } else {\n    var overlay = mountOverlay(vm);\n    context.stack.push({\n      vm: vm,\n      config: config,\n      overlay: overlay\n    });\n  }\n\n  updateOverlay(vm);\n}\nexport function closeOverlay(vm) {\n  var item = context.find(vm);\n\n  if (item) {\n    item.overlay.show = false;\n  }\n}\nexport function removeOverlay(vm) {\n  var item = context.find(vm);\n\n  if (item) {\n    removeNode(item.overlay.$el);\n    context.remove(vm);\n  }\n}"],"mappings":";;;AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,OAAO,MAAM,eAAe;AACnC,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,KAAK,QAAQ,wBAAwB;AAC9C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,IAAIC,aAAa,GAAG;EAClBC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,CAAC;AAChB,CAAC;AAED,SAASC,YAAYA,CAACC,EAAE,EAAE;EACxB,OAAON,KAAK,CAACF,OAAO,EAAE;IACpBS,EAAE,EAAE;MACF;MACAC,KAAK,EAAE,SAASA,KAAKA,CAAA,EAAG;QACtBF,EAAE,CAACG,KAAK,CAAC,eAAe,CAAC;QAEzB,IAAIH,EAAE,CAACI,mBAAmB,EAAE;UAC1B,IAAIJ,EAAE,CAACK,cAAc,EAAE;YACrBL,EAAE,CAACK,cAAc,CAAC,CAAC;UACrB,CAAC,MAAM;YACLL,EAAE,CAACM,KAAK,CAAC,CAAC;UACZ;QACF;MACF;IACF;EACF,CAAC,CAAC;AACJ;AAEA,OAAO,SAASC,aAAaA,CAACP,EAAE,EAAE;EAChC,IAAIQ,IAAI,GAAGf,OAAO,CAACgB,IAAI,CAACT,EAAE,CAAC;EAE3B,IAAIQ,IAAI,EAAE;IACR,IAAIE,EAAE,GAAGV,EAAE,CAACW,GAAG;IACf,IAAIC,MAAM,GAAGJ,IAAI,CAACI,MAAM;MACpBC,OAAO,GAAGL,IAAI,CAACK,OAAO;IAE1B,IAAIH,EAAE,IAAIA,EAAE,CAACI,UAAU,EAAE;MACvBJ,EAAE,CAACI,UAAU,CAACC,YAAY,CAACF,OAAO,CAACF,GAAG,EAAED,EAAE,CAAC;IAC7C;IAEAnB,QAAQ,CAACsB,OAAO,EAAEjB,aAAa,EAAEgB,MAAM,EAAE;MACvCI,IAAI,EAAE;IACR,CAAC,CAAC;EACJ;AACF;AACA,OAAO,SAASC,WAAWA,CAACjB,EAAE,EAAEY,MAAM,EAAE;EACtC,IAAIJ,IAAI,GAAGf,OAAO,CAACgB,IAAI,CAACT,EAAE,CAAC;EAE3B,IAAIQ,IAAI,EAAE;IACRA,IAAI,CAACI,MAAM,GAAGA,MAAM;EACtB,CAAC,MAAM;IACL,IAAIC,OAAO,GAAGd,YAAY,CAACC,EAAE,CAAC;IAC9BP,OAAO,CAACyB,KAAK,CAACC,IAAI,CAAC;MACjBnB,EAAE,EAAEA,EAAE;MACNY,MAAM,EAAEA,MAAM;MACdC,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ;EAEAN,aAAa,CAACP,EAAE,CAAC;AACnB;AACA,OAAO,SAASoB,YAAYA,CAACpB,EAAE,EAAE;EAC/B,IAAIQ,IAAI,GAAGf,OAAO,CAACgB,IAAI,CAACT,EAAE,CAAC;EAE3B,IAAIQ,IAAI,EAAE;IACRA,IAAI,CAACK,OAAO,CAACG,IAAI,GAAG,KAAK;EAC3B;AACF;AACA,OAAO,SAASK,aAAaA,CAACrB,EAAE,EAAE;EAChC,IAAIQ,IAAI,GAAGf,OAAO,CAACgB,IAAI,CAACT,EAAE,CAAC;EAE3B,IAAIQ,IAAI,EAAE;IACRb,UAAU,CAACa,IAAI,CAACK,OAAO,CAACF,GAAG,CAAC;IAC5BlB,OAAO,CAAC6B,MAAM,CAACtB,EAAE,CAAC;EACpB;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}