{"ast":null,"code":"import \"core-js/modules/es.array.is-array.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Types\n\nvar _createNamespace = createNamespace('skeleton'),\n  createComponent = _createNamespace[0],\n  bem = _createNamespace[1];\nvar DEFAULT_ROW_WIDTH = '100%';\nvar DEFAULT_LAST_ROW_WIDTH = '60%';\nfunction Skeleton(h, props, slots, ctx) {\n  if (!props.loading) {\n    return slots[\"default\"] && slots[\"default\"]();\n  }\n  function Title() {\n    if (props.title) {\n      return h(\"h3\", {\n        \"class\": bem('title'),\n        \"style\": {\n          width: addUnit(props.titleWidth)\n        }\n      });\n    }\n  }\n  function Rows() {\n    var Rows = [];\n    var rowWidth = props.rowWidth;\n    function getRowWidth(index) {\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n      return rowWidth;\n    }\n    for (var i = 0; i < props.row; i++) {\n      Rows.push(h(\"div\", {\n        \"class\": bem('row'),\n        \"style\": {\n          width: addUnit(getRowWidth(i))\n        }\n      }));\n    }\n    return Rows;\n  }\n  function Avatar() {\n    if (props.avatar) {\n      var size = addUnit(props.avatarSize);\n      return h(\"div\", {\n        \"class\": bem('avatar', props.avatarShape),\n        \"style\": {\n          width: size,\n          height: size\n        }\n      });\n    }\n  }\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem({\n      animate: props.animate,\n      round: props.round\n    })\n  }, inherit(ctx)]), [Avatar(), h(\"div\", {\n    \"class\": bem('content')\n  }, [Title(), Rows()])]);\n}\nSkeleton.props = {\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  titleWidth: [Number, String],\n  avatarSize: [Number, String],\n  row: {\n    type: [Number, String],\n    \"default\": 0\n  },\n  loading: {\n    type: Boolean,\n    \"default\": true\n  },\n  animate: {\n    type: Boolean,\n    \"default\": true\n  },\n  avatarShape: {\n    type: String,\n    \"default\": 'round'\n  },\n  rowWidth: {\n    type: [Number, String, Array],\n    \"default\": DEFAULT_ROW_WIDTH\n  }\n};\nexport default createComponent(Skeleton);","map":{"version":3,"names":["_mergeJSXProps","createNamespace","addUnit","inherit","_createNamespace","createComponent","bem","DEFAULT_ROW_WIDTH","DEFAULT_LAST_ROW_WIDTH","Skeleton","h","props","slots","ctx","loading","Title","title","width","titleWidth","Rows","rowWidth","getRowWidth","index","row","Array","isArray","i","push","Avatar","avatar","size","avatarSize","avatarShape","height","animate","round","Boolean","Number","String","type"],"sources":["C:/Users/方鹏/Desktop/codingSpace/vue项目/vue-sell/node_modules/vant/es/skeleton/index.js"],"sourcesContent":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Types\n\nvar _createNamespace = createNamespace('skeleton'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar DEFAULT_ROW_WIDTH = '100%';\nvar DEFAULT_LAST_ROW_WIDTH = '60%';\n\nfunction Skeleton(h, props, slots, ctx) {\n  if (!props.loading) {\n    return slots.default && slots.default();\n  }\n\n  function Title() {\n    if (props.title) {\n      return h(\"h3\", {\n        \"class\": bem('title'),\n        \"style\": {\n          width: addUnit(props.titleWidth)\n        }\n      });\n    }\n  }\n\n  function Rows() {\n    var Rows = [];\n    var rowWidth = props.rowWidth;\n\n    function getRowWidth(index) {\n      if (rowWidth === DEFAULT_ROW_WIDTH && index === +props.row - 1) {\n        return DEFAULT_LAST_ROW_WIDTH;\n      }\n\n      if (Array.isArray(rowWidth)) {\n        return rowWidth[index];\n      }\n\n      return rowWidth;\n    }\n\n    for (var i = 0; i < props.row; i++) {\n      Rows.push(h(\"div\", {\n        \"class\": bem('row'),\n        \"style\": {\n          width: addUnit(getRowWidth(i))\n        }\n      }));\n    }\n\n    return Rows;\n  }\n\n  function Avatar() {\n    if (props.avatar) {\n      var size = addUnit(props.avatarSize);\n      return h(\"div\", {\n        \"class\": bem('avatar', props.avatarShape),\n        \"style\": {\n          width: size,\n          height: size\n        }\n      });\n    }\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem({\n      animate: props.animate,\n      round: props.round\n    })\n  }, inherit(ctx)]), [Avatar(), h(\"div\", {\n    \"class\": bem('content')\n  }, [Title(), Rows()])]);\n}\n\nSkeleton.props = {\n  title: Boolean,\n  round: Boolean,\n  avatar: Boolean,\n  titleWidth: [Number, String],\n  avatarSize: [Number, String],\n  row: {\n    type: [Number, String],\n    default: 0\n  },\n  loading: {\n    type: Boolean,\n    default: true\n  },\n  animate: {\n    type: Boolean,\n    default: true\n  },\n  avatarShape: {\n    type: String,\n    default: 'round'\n  },\n  rowWidth: {\n    type: [Number, String, Array],\n    default: DEFAULT_ROW_WIDTH\n  }\n};\nexport default createComponent(Skeleton);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}